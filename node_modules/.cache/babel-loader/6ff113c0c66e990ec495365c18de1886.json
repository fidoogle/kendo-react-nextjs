{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\figuajardo\\\\Sites\\\\kendo-react-nextjs\\\\pages\\\\rxjs-websocket.js\";\nimport React from \"react\";\nimport Nav from '../components/nav';\nimport { webSocket } from \"rxjs/webSocket\";\nvar subject = webSocket(\"wss://echo.websocket.org/\");\n\nvar RxJSWebsocket = function RxJSWebsocket() {\n  subject.subscribe(function (msg) {\n    return console.log('message received: ' + msg);\n  }, // Called whenever there is a message from the server.\n  function (err) {\n    return console.log(err);\n  }, // Called if at any point WebSocket API signals some kind of error.\n  function () {\n    return console.log('complete');\n  } // Called when connection is closed (for whatever reason).\n  );\n  subject.next({\n    message: 'some message'\n  }); // This will send a message to the server once a connection is made. Remember value is serialized with JSON.stringify by default!\n\n  subject.complete(); // Closes the connection.\n\n  subject.error({\n    code: 4000,\n    reason: 'I think our app just broke!'\n  }); // Also closes the connection, but let's the server know that this closing is caused by some error.\n\n  return React.createElement(React.Fragment, null, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"This is the RxJSWebsocket page.\"));\n};\n\nexport default RxJSWebsocket;","map":{"version":3,"sources":["C:/Users/figuajardo/Sites/kendo-react-nextjs/pages/rxjs-websocket.js"],"names":["Nav","webSocket","subject","RxJSWebsocket","subscribe","msg","console","log","err","next","message","complete","error","code","reason"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,IAAMC,OAAO,GAAGD,SAAS,CAAC,2BAAD,CAAzB;;AAGA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBD,EAAAA,OAAO,CAACE,SAAR,CACI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAY,uBAAuBF,GAAnC,CAAJ;AAAA,GADP,EACoD;AAChD,YAAAG,GAAG;AAAA,WAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,GAFP,EAE6B;AACzB;AAAA,WAAMF,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA,GAHJ,CAGkC;AAHlC;AAMAL,EAAAA,OAAO,CAACO,IAAR,CAAa;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAb,EAPwB,CAQxB;;AAEAR,EAAAA,OAAO,CAACS,QAAR,GAVwB,CAUJ;;AAEpBT,EAAAA,OAAO,CAACU,KAAR,CAAc;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAd,EAZwB,CAaxB;;AAEA,SACI,0CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ;AAQH,CAvBD;;AAyBA,eAAeX,aAAf","sourcesContent":["import Nav from '../components/nav'\r\nimport { webSocket } from \"rxjs/webSocket\";\r\nconst subject = webSocket(\"wss://echo.websocket.org/\");\r\n\r\n\r\nconst RxJSWebsocket = () => {\r\n    subject.subscribe(\r\n        msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\r\n        err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\r\n        () => console.log('complete') // Called when connection is closed (for whatever reason).\r\n    );\r\n\r\n    subject.next({ message: 'some message' });\r\n    // This will send a message to the server once a connection is made. Remember value is serialized with JSON.stringify by default!\r\n\r\n    subject.complete(); // Closes the connection.\r\n\r\n    subject.error({ code: 4000, reason: 'I think our app just broke!' });\r\n    // Also closes the connection, but let's the server know that this closing is caused by some error.\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <div>\r\n                This is the RxJSWebsocket page.\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RxJSWebsocket;"]},"metadata":{},"sourceType":"module"}