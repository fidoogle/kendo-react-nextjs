{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\figuajardo\\\\Sites\\\\kendo-react-nextjs\\\\pages\\\\websocket.js\";\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../components/nav';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nvar ws = new W3CWebSocket('wss://echo.websocket.org/');\n\nvar _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataFromServer = _useState2[0],\n    setDataFromServer = _useState2[1];\n\nvar configureWs = function configureWs() {\n  ws.onopen = function () {\n    // on connecting, do nothing but log it to the console\n    console.log('connected');\n  };\n\n  ws.onmessage = function (evt) {\n    // may need to parse data sent from the websocket server\n    var msg = JSON.parse(evt.data);\n    setDataFromServer(evt.data);\n    console.log(msg.month);\n  };\n\n  ws.onclose = function () {\n    console.log('disconnected'); //TODO: automatically try to reconnect on connection loss\n  };\n\n  sendMessages();\n};\n\nvar getRndInteger = function getRndInteger(min, max) {\n  var rnd = Math.floor(Math.random() * (max - min + 1)) + min;\n  return Math.round(rnd / 100) * 100; //rounds to nearest 100\n};\n\nvar buildMsg = function buildMsg() {\n  return _JSON$stringify({\n    month: \"Oct 19\",\n    volume: getRndInteger(500, 7500)\n  });\n};\n\nvar sendMessages = function sendMessages() {\n  var sendMsgs = setInterval(function () {\n    ws.send(buildMsg());\n  }, 2000);\n  setTimeout(function () {\n    clearInterval(sendMsgs);\n  }, 15000);\n};\n\nvar Main = function Main() {\n  useEffect(function () {\n    return configureWs();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"The websocket returned: \", dataFromServer));\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/figuajardo/Sites/kendo-react-nextjs/pages/websocket.js"],"names":["React","useState","useEffect","Nav","w3cwebsocket","W3CWebSocket","ws","dataFromServer","setDataFromServer","configureWs","onopen","console","log","onmessage","evt","msg","JSON","parse","data","month","onclose","sendMessages","getRndInteger","min","max","rnd","Math","floor","random","round","buildMsg","volume","sendMsgs","setInterval","send","setTimeout","clearInterval","Main"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AAEA,IAAMC,EAAE,GAAG,IAAID,YAAJ,CAAiB,2BAAjB,CAAX;;gBAC4CJ,QAAQ,CAAC,EAAD,C;;IAA7CM,c;IAAgBC,iB;;AAEvB,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBH,EAAAA,EAAE,CAACI,MAAH,GAAY,YAAM;AACd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAHD;;AAKAN,EAAAA,EAAE,CAACO,SAAH,GAAe,UAAAC,GAAG,EAAI;AAClB;AACA,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAZ;AACAV,IAAAA,iBAAiB,CAACM,GAAG,CAACI,IAAL,CAAjB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACI,KAAhB;AACH,GALD;;AAOAb,EAAAA,EAAE,CAACc,OAAH,GAAa,YAAM;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADe,CAEf;AAEH,GAJD;;AAMAS,EAAAA,YAAY;AACf,CApBD;;AAsBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAChC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA+CA,GAA3D;AACA,SAAOG,IAAI,CAACG,KAAL,CAAWJ,GAAG,GAAC,GAAf,IAAoB,GAA3B,CAFgC,CAEA;AACnC,CAHD;;AAKA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,SAAO,gBAAe;AAAEX,IAAAA,KAAK,EAAE,QAAT;AAAmBY,IAAAA,MAAM,EAAET,aAAa,CAAC,GAAD,EAAM,IAAN;AAAxC,GAAf,CAAP;AACH,CAFD;;AAIA,IAAMD,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,MAAMW,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAAE3B,IAAAA,EAAE,CAAC4B,IAAH,CAAQJ,QAAQ,EAAhB;AAAqB,GAA9B,EAAgC,IAAhC,CAA5B;AACAK,EAAAA,UAAU,CAAC,YAAM;AAAEC,IAAAA,aAAa,CAACJ,QAAD,CAAb;AAAwB,GAAjC,EAAmC,KAAnC,CAAV;AACH,CAHD;;AAKA,IAAMK,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfnC,EAAAA,SAAS,CAAC;AAAA,WAAMO,WAAW,EAAjB;AAAA,GAAD,EAAsB,EAAtB,CAAT;AAEA,SACI,0CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC6BF,cAD7B,CAFJ,CADJ;AAQH,CAXD;;AAaA,eAAe8B,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Nav from '../components/nav';\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\r\n\r\nconst ws = new W3CWebSocket('wss://echo.websocket.org/');\r\nconst [dataFromServer, setDataFromServer] = useState('');\r\n\r\nconst configureWs = () => {\r\n    ws.onopen = () => {\r\n        // on connecting, do nothing but log it to the console\r\n        console.log('connected')\r\n    }\r\n\r\n    ws.onmessage = evt => {\r\n        // may need to parse data sent from the websocket server\r\n        const msg = JSON.parse(evt.data)\r\n        setDataFromServer(evt.data);\r\n        console.log(msg.month);\r\n    }\r\n\r\n    ws.onclose = () => {\r\n        console.log('disconnected')\r\n        //TODO: automatically try to reconnect on connection loss\r\n\r\n    }\r\n\r\n    sendMessages();\r\n}\r\n\r\nconst getRndInteger = (min, max) => {\r\n    const rnd = Math.floor(Math.random() * (max - min + 1) ) + min;\r\n    return Math.round(rnd/100)*100; //rounds to nearest 100\r\n}\r\n\r\nconst buildMsg = () => {\r\n    return JSON.stringify({ month: \"Oct 19\", volume: getRndInteger(500, 7500) });\r\n}\r\n\r\nconst sendMessages = () => {\r\n    const sendMsgs = setInterval(() => { ws.send(buildMsg()) }, 2000);\r\n    setTimeout(() => { clearInterval(sendMsgs)}, 15000);\r\n}\r\n\r\nconst Main = () => {\r\n    useEffect(() => configureWs(), []);\r\n\r\n    return (\r\n        <>\r\n            <Nav/>\r\n            <div>\r\n                The websocket returned: {dataFromServer}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}